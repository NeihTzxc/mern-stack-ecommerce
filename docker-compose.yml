version: '3.6'
services:
  ecommerce-api:
    container_name: ecommerce
    build:
      context: .
      dockerfile: Dockerfile
    image: ecommerce
    restart: unless-stopped
    ports:
      - ${SERVER_PUBLIC_PORT}:${PORT}
    volumes:
      - "./backend:/usr/src/app/src"
    environment:
      NODE_ENV: development
    env_file:
      - .env
    networks:
      - ecommerce-network
    command: exec yarn start

  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: '${MONGO_DB}'
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_USER}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_PASSWORD}'
    volumes:
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      - mongodb:/data/db
      - ./mongoconfig:/data/configdb
    env_file:
      - .env
    ports:
      - 28017:27017
    networks:
      - ecommerce-network

  redis:
    image: redis:6.2
    restart: always
    environment:
      REDIS_PASSWORD: '${REDIS_PASSWORD}'
    ports:
      - 7379:6379
    env_file:
      - .env
    networks:
      - ecommerce-network
      
  minio:
    # Storge s3
    image: minio/minio:RELEASE.2022-02-07T08-17-33Z
    restart: always
    volumes:
      - minio_data:/minio-data/data
    ports:
      - ${S3_WEB_PORT}:${S3_WEB_PORT}
      - ${S3_CONSOLE_PORT}:${S3_CONSOLE_PORT}
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: '${S3_ACCESS_KEY_ID}' ## min 8 character
      MINIO_ROOT_PASSWORD: '${S3_SECRET_ACCESS_KEY}' ## min 8 character
      MINIO_BROWSER: "${MINIO_BROWSER}"
      #MINIO_IAM_JWKS_URL: '{"type": "HS256", "key": "${JWT_KEY}"}' ## TODO: deploy IAM user for AssumeRole
    command: "server /minio-data/data --address :${S3_WEB_PORT} --console-address :${S3_CONSOLE_PORT}"
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge
volumes:
  minio_data:
    external: true
    name: ecommerce_upload_data_minio
  mongodb: